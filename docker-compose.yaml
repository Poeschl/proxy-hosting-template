version: '3'

services:

  traefik:
    image: "traefik:v2.4.7"
    restart: unless-stopped
    command:
      - '--api'
      - '--api.dashboard=true'
      - '--ping=true'
      - '--ping.entrypoint=websecure'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--providers.docker.network=proxy'

      - '--entrypoints.web.address=:80'
      - '--entrypoints.web.http.redirections.entrypoint.to=websecure'
      - '--entrypoints.websecure.address=:443'
      - '--entrypoints.websecure.http.tls=true'
      - '--entrypoints.websecure.http.tls.certResolver=letsencrypt'

      - '--certificatesresolvers.letsencrypt.acme.email=${letsencrypt_email}'
      - '--certificatesresolvers.letsencrypt.acme.storage=acme.json'
      - '--certificatesresolvers.letsencrypt.acme.tlschallenge=true'

      #- '--log.level=DEBUG'
    networks:
      - proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - 'acme-store:/acme.json'
    labels:
      - 'traefik.enable=true'
      # since Traefik don't allow to change the api path the referer is used as rule (https://github.com/traefik/traefik/issues/5853)
      - 'traefik.http.routers.dashboard.rule=Host(`${letsencrypt_domain}`) && (PathPrefix(`/traefik/dashboard`) || HeadersRegexp(`Referer`, `.*\/traefik\/dashboard\/.*`))'
      - 'traefik.http.routers.dashboard.priority=20'
      - 'traefik.http.routers.dashboard.service=api@internal'
      - 'traefik.http.routers.dashboard.entrypoints=websecure'
      - 'traefik.http.routers.dashboard.middlewares=google-auth,strip-prefix-traefik'
      - 'traefik.http.middlewares.strip-prefix-traefik.stripprefix.prefixes=/traefik'

      - 'traefik.http.routers.dashboard-redirect.rule=PathPrefix(`/traefik`)'
      - 'traefik.http.routers.dashboard-redirect.priority=10'
      - 'traefik.http.routers.dashboard-redirect.service=noop@internal'
      - 'traefik.http.routers.dashboard-redirect.entrypoints=websecure'
      - 'traefik.http.routers.dashboard-redirect.middlewares=google-auth,dashboard-redirect'
      - 'traefik.http.middlewares.dashboard-redirect.redirectregex.regex=^(https://.*)/traefik.*'
      - 'traefik.http.middlewares.dashboard-redirect.redirectregex.replacement=$${1}/traefik/dashboard/'

  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2.2.0
    restart: unless-stopped
    environment:
      DEFAULT_PROVIDER: google
      PROVIDERS_GOOGLE_CLIENT_ID: ${google_client_id}
      PROVIDERS_GOOGLE_CLIENT_SECRET: ${google_client_secret}
      SECRET: ${auth_secret}
      INSECURE_COOKIE: ${auth_insecure}
      WHITELIST: ${auth_email_whitelist}
      #LOG_LEVEL: debug
    networks:
      - proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.google-auth.rule=PathPrefix(`/_oauth`)'
      - 'traefik.http.routers.google-auth.entrypoints=websecure'
      - 'traefik.http.services.google-auth.loadbalancer.server.port=4181'
      - 'traefik.http.routers.google-auth.middlewares=google-auth'
      - 'traefik.http.middlewares.google-auth.forwardauth.address=http://traefik-forward-auth:4181'
      - 'traefik.http.middlewares.google-auth.forwardauth.authResponseHeaders=X-Forwarded-User'

  grafana:
    image: grafana/grafana:7.5.6
    restart: unless-stopped
    networks:
      - proxy
      - monitoring_internal
    volumes:
      - './grafana:/etc/grafana/provisioning/'
      - 'grafana-data:/var/lib/grafana'
    environment:
      GF_USERS_ALLOW_SIGN_UP: 'false'
      GF_USERS_AUTO_ASSIGN_ORG: 'true'
      GF_USERS_AUTO_ASSIGN_ORG_ROLE: Admin
      GF_AUTH_PROXY_ENABLED: 'true'
      GF_AUTH_PROXY_HEADER_NAME: X-Forwarded-User
      GF_AUTH_PROXY_HEADER_PROPERTY: email
      GF_AUTH_PROXY_AUTO_SIGN_UP: 'true'
      GF_AUTH_PROXY_SYNC_TTL: 60
      GF_AUTH_PROXY_ENABLE_LOGIN_TOKEN: 'true'
      GF_AUTH_DISABLE_LOGIN_FORM: 'true'
      GF_AUTH_SIGNOUT_REDIRECT_URL: /_oauth/logout
      GF_SERVER_ROOT_URL: '%(protocol)s://%(domain)s:%(http_port)s/grafana/'
      GF_SERVER_SERVE_FROM_SUB_PATH: 'true'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)'
      - 'traefik.http.routers.grafana.entrypoints=websecure'
      - 'traefik.http.routers.grafana.middlewares=google-auth'

  prometheus:
    image: prom/prometheus:v2.27.0
    restart: unless-stopped
    networks:
      - monitoring_internal
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - 'prometheus-data:/prometheus'
      - './prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'

  glances:
    # TODO: replace with version, when dependencies are included
    image: nicolargo/glances:alpine-dev
    restart: unless-stopped
    network_mode: host
    pid: host
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      GLANCES_OPT: "--quiet --export prometheus"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./glances/config.conf:/glances/conf/glances.conf

networks:
  proxy:
  monitoring_internal:

volumes:
  prometheus-data:
  grafana-data:
  acme-store: